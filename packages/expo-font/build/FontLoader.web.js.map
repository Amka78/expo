{"version":3,"file":"FontLoader.web.js","sourceRoot":"","sources":["../src/FontLoader.web.ts"],"names":[],"mappings":"AAAA,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,+BAA+B,CAAC;AAE1D;;GAEG;AAEH,MAAM,UAAU,sBAAsB,CAAC,IAAY;IACjD,OAAO,KAAK,CAAC;AACf,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,MAAkB;IAClD,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,KAAK,IAAI,MAAM,EAAE;QACjD,OAAO;YACH,OAAO,EAAE,MAAM,CAAC,OAAO;YACvB,aAAa;YACb,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,QAAQ;SACrC,CAAA;KACF;IAED,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;QAC9B,MAAM,IAAI,KAAK,CAAC,mBAAmB,OAAO,MAAM,kDAAkD,CAAC,CAAC;KACrG;IAED,OAAO;QACH,GAAG,EAAE,MAAM;KACZ,CAAC;AACN,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,mBAAmB,CAAC,IAAY,EAAE,KAAmB;IACvE,IAAI,SAAS,EAAE;QACX,MAAM,cAAc,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC/C;AACL,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,IAAY;IAC1C,OAAO,IAAI,CAAC;AAChB,CAAC","sourcesContent":["import ExpoFontLoader from './ExpoFontLoader';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { FontSource, FontResource } from './FontTypes.web';\n/**\n * A font source can be a URI, a module ID, or an Expo Asset.\n */\n\nexport function fontFamilyNeedsScoping(name: string): boolean {\n  return false;\n}\n\nexport function getAssetForSource(source: FontSource): FontResource {\n  if (typeof source === 'object' && 'uri' in source) {\n    return {\n        display: source.display,\n        // @ts-ignore\n        uri: source.uri || source.localUri\n    }\n  }\n\n  if (typeof source !== 'string') {\n    throw new Error(`Unexpected type ${typeof source} expected a URI string or Asset from expo-asset.`);\n  }\n\n  return {\n      uri: source\n    };\n}\n\nexport async function loadSingleFontAsync(name: string, asset: FontResource): Promise<void> {\n    if (canUseDOM) {\n        await ExpoFontLoader.loadAsync(name, asset);\n    }\n}\n\nexport function getNativeFontName(name: string): string {\n    return name;\n}\n"]}